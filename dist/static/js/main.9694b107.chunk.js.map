{"version":3,"sources":["components/auth/SignIn.js","store/actions/authActions.js","components/auth/SignUp.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/projects/ProjectDetails.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","authError","auth","firebase","dispatch","signIn","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","email","password","then","type","catch","err","props","useState","setState","handleChange","e","target","id","value","prevState","uid","to","className","onSubmit","preventDefault","console","log","htmlFor","onChange","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","firstName","lastName","initials","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","Notifications","compose","ordered","firestoreConnect","signOut","onClick","profile","SignedOutLinks","links","createProject","authorId","add","Date","content","history","push","ownProps","match","params","data","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","config","userProfile","useFirestoreForProfile","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9694b107.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport {signIn} from '../../store/actions/authActions';\nconst SignIn = (props) => {\n\n    const [state, setState] = useState({\n        email: '',\n        password: '',\n    })\n\n    const handleChange = e => {\n        const { id, value } = e.target;\n        setState(prevState => ({\n            ...prevState,\n            [id] : value,\n\n        }));\n    }\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(state);\n        props.signIn(state)\n    }\n    const { authError, auth} = props;\n    if(auth.uid) return <Redirect to=\"/\"/>\n    return ( \n        <div className=\"container\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </div>\n            </form>\n        </div>\n     );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut  = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut()\n        .then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'});\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport { signUp } from '../../store/actions/authActions';\nconst SignUp = (props) => {\n\n\n    const [state, setState] = useState({\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    })\n\n    const handleChange = e => {\n        const { id, value } = e.target;\n        setState(prevState => ({\n            ...prevState,\n            [id] : value,\n\n        }));\n    }\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(state);\n        props.signUp(state)\n    }\n\n    const { auth, authError } = props;\n    if(auth.uid) return <Redirect to=\"/\"/>\n    return ( \n        <div className=\"container\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id=\"firstName\" onChange={handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={handleChange}/>\n                </div>\n                \n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </div>\n            </form>\n        </div>\n     );\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n} \n \nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return ( \n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n     );\n}\n \nexport default ProjectSummary;","import { Link } from \"react-router-dom\";\nimport ProjectSummary from \"./ProjectSummary\"\n\n\nconst ProjectList = ({projects}) => {\n    return ( \n        <div className=\"project-list section\">\n            { projects &&  projects.map(project => {\n                return(\n                    \n                    <Link to={'/project/' + project.id} key={project.id} >\n                    <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n     );\n}\n \nexport default ProjectList;","const Notifications = () => {\n    return ( \n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        <li>Notification</li>\n                        <li>Notification</li>\n                        <li>Notification</li>\n                        <li>Notification</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Notifications;","import ProjectList from \"../projects/ProjectList\";\nimport Notifications from \"./Notifications\";\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport  { Redirect } from 'react-router-dom';\n\nconst Dashboard = (props) => {\n    const { projects, auth } = props;\n\n    if (!auth.uid)  return <Redirect to=\"/signin\" />\n    return ( \n        <div className=\"dashboard container\">\n            <div className=\"row\">\n                <div className=\"col s12 m6\">\n                    <ProjectList projects={projects}/>\n                </div>\n                <div className=\"col s12 m5 offset-m1\">\n                    <Notifications />\n                </div>\n            </div>\n        </div>\n     );\n}\n\nconst mapStateToProps = state => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth\n    }\n}\n \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => ['projects'])\n)(Dashboard);","import { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return ( \n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log out</a></li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n                    {props.profile.initials}\n                </NavLink>\n            </li>\n        </ul>\n     );\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n \nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import {NavLink} from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return ( \n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\n        </ul>\n     );\n}\n \nexport default SignedOutLinks;","import { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\n\nconst Navbar = (props) => {\n\n    const {auth, profile} = props;\n\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n    return ( \n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MagmaPlan</Link>\n                { links }\n            </div>\n        </nav>\n     );\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n \nexport default connect(mapStateToProps)(Navbar);","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\nconst CreateProject = (props) => {\n\n\n    const [state, setState] = useState({\n        title: '',\n        content: '',\n    })\n\n    const handleChange = e => {\n        const { id, value } = e.target;\n        setState(prevState => ({\n            ...prevState,\n            [id] : value,\n\n        }));\n    }\n    const handleSubmit = e => {\n        e.preventDefault();\n        // console.log(state);\n        props.createProject(state);\n        props.history.push('/');\n    }\n    const { auth } = props;\n    if (!auth.uid)  return <Redirect to=\"/signin\" />\n    return ( \n        <div className=\"container\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" onChange={handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Content</label>\n                    <textarea className=\"materialize-textarea\" id=\"content\" onChange={handleChange}></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                </div>\n            </form>\n        </div>\n     );\n}\nconst mapStateToProps = state => {\n    return{\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","\nexport const createProject = project => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project })\n        }).catch(err => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        })\n    }\n};","import {connect} from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router';\nimport { compose } from 'redux';\nimport  moment from'moment';\n\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n    if (!auth.uid)  return <Redirect to=\"/signin\" />\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => ['projects'])\n)(ProjectDetails);","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport CreateProject from './components/projects/CreateProject';\nimport ProjectDetails from './components/projects/ProjectDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('sign out success');\n      return state\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: 1, title: 'help me find peach', content: 'blah blah blah'},\n        {id: 2, title: 'collect all the stars', content: 'blah blah blah'},\n        {id: 3, title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n};\n\nconst projectReducer = (state = initState ,action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project ', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer} from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;"," import firebase from 'firebase/app';\n import 'firebase/firestore';\n import 'firebase/auth';\n \n // Your web app's Firebase configuration\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDdCRWQDtp7K4k8vXc-7la102hLhUqiqvg\",\n    authDomain: \"react-redux-magmaplan.firebaseapp.com\",\n    projectId: \"react-redux-magmaplan\",\n    storageBucket: \"react-redux-magmaplan.appspot.com\",\n    messagingSenderId: \"323454082790\",\n    appId: \"1:323454082790:web:d8fe599cd7f31050d32527\",\n    measurementId: \"G-H19QHLR57Y\"\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {  createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport fbConfig from './config/fbConfig';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport firebase from 'firebase/app';\n\nconst config = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n\nconst store = createStore(\n  rootReducer,\n  compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n      reduxFirestore(firebase, fbConfig, config),\n\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: config,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return null;\n  return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}